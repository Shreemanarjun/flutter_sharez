name: Gemini Issue Reviewer

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  review_issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    if: github.event_name == 'issues' || (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@gemini-cli /review'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Gemini Issue Review
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue;
            const commentBody = context.payload.comment?.body;

            let prompt;
            if (context.eventName === 'issues') {
              prompt = `
                Review the following issue and provide a comment.
                Issue Title: ${issue.title}
                Issue Body: ${issue.body}
              `;
            } else if (context.eventName === 'issue_comment' && commentBody.includes('@gemini-cli /review')) {
              prompt = `
                Review the following issue and provide a comment in response to the user's request.
                Issue Title: ${issue.title}
                Issue Body: ${issue.body}
                User's comment: ${commentBody}
              `;
            }

            // TODO: Replace with your Gemini API call
            const geminiResponse = "This is a placeholder response from Gemini. The issue title is '" + issue.title + "'.";

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: geminiResponse
            });